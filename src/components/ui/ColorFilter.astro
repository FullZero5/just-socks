---
const {
    page,
    sortBy,
    sortOrder,
    filterByColor,
    filterBySize,
    availableColors,
} = Astro.props;
---

<div class="flex gap-4 mb-8 items-center">
    <span class="text-gray-600">Filter by Color:</span>
    {
        availableColors.map((color: string) => (
            <a
                aria-label={color}
                href={`?page=1&sortBy=${sortBy}&sortOrder=${sortOrder}&color=${color}&size=${filterBySize || ""}`}
                class={`outline-none focus:outline-none w-5 h-5 rounded-full flex items-center justify-center 
      ${filterByColor === color ? "bg-black text-white" : "bg-gray-200 hover:bg-gray-300"}`}
            >
                <span
                    class="w-5 h-5 rounded-full"
                    style={{ backgroundColor: color }}
                />
            </a>
        ))
    }
    {
        filterByColor && (
            <a
                href={`?page=1&sortBy=${sortBy}&sortOrder=${sortOrder}&size=${filterBySize || ""}`}
                class="w-10 h-10 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 text-gray-600"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12"
                    />
                </svg>
            </a>
        )
    }
</div>
