---
import Layout from "@layouts/Layout.astro";
import { getProducts } from "../data";
import ProductCard from "@components/ProductCard.astro";
import { previousHref, previousText, tutorialHref, tutorialText, githubText, githubHref } from "../config";
import BostonLogo from '@components/Logo.astro';

// Получаем параметры страницы и сортировки из URL
const page = parseInt(Astro.url.searchParams.get("page") || "1");
const sortBy = Astro.url.searchParams.get("sortBy") || "price"; // По умолчанию сортировка по цене
const sortOrder = Astro.url.searchParams.get("sortOrder") || "asc"; // По умолчанию по возрастанию

const limit = 10;
const skip = (page - 1) * limit;

// Получаем список товаров с учетом сортировки
const productList = getProducts(skip, limit, sortBy, sortOrder);
const { products, total } = productList;
const totalPages = Math.ceil(total / limit);
---

<Layout title="Shop">
  <div>
    <BostonLogo />
    <h1 class="text-5xl font-bold mb-4">Just Socks</h1>
    <h3 class="text-xl text-gray-500 mb-8">
      We sell cool socks, more information here <a class="hover:underline text-black" href="@">WB</a>.
    </h3>
    <nav class="pb-10">
      <a href={previousHref} class="text-gray-400 hover:underline hover:text-gray-950 py-8">{previousText}</a>
      <span class="text-gray-400 mx-2">&#183;</span>
      <a href={tutorialHref} class="text-gray-400 hover:underline hover:text-gray-950">{tutorialText}</a>
      <span class="text-gray-400 mx-2">&#183;</span>
      <a href={githubHref} class="text-gray-400 hover:underline hover:text-gray-950">{githubText}</a>
    </nav>
  </div>

  <!-- Кнопки сортировки -->
  <div class="flex gap-4 mb-8">
    <a
      href={`?page=${page}&sortBy=price&sortOrder=${sortOrder === 'asc' ? 'desc' : 'asc'}`}
      class="px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded"
    >
      Sort by Price ({sortBy === 'price' ? (sortOrder === 'asc' ? '↑' : '↓') : ''})
    </a>
    <a
      href={`?page=${page}&sortBy=category&sortOrder=${sortOrder === 'asc' ? 'desc' : 'asc'}`}
      class="px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded"
    >
      Sort by Category ({sortBy === 'category' ? (sortOrder === 'asc' ? '↑' : '↓') : ''})
    </a>
  </div>

  <!-- Список товаров -->
  <section class="flex flex-wrap gap-4 py-8">
    {products.map((product) => <ProductCard {product} />)}
  </section>

  <!-- Пагинация -->
  <div class="flex justify-center gap-4 py-8">
    {page > 1 && (
      <a href={`?page=${page - 1}&sortBy=${sortBy}&sortOrder=${sortOrder}`} class="px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded">
        Previous
      </a>
    )}
    {Array.from({ length: totalPages }, (_, i) => (
      <a
        href={`?page=${i + 1}&sortBy=${sortBy}&sortOrder=${sortOrder}`}
        class={`px-4 py-2 ${i + 1 === page ? 'bg-black text-white' : 'bg-gray-200 hover:bg-gray-300'} rounded`}
      >
        {i + 1}
      </a>
    ))}
    {page < totalPages && (
      <a href={`?page=${page + 1}&sortBy=${sortBy}&sortOrder=${sortOrder}`} class="px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded">
        Next
      </a>
    )}
  </div>
</Layout>